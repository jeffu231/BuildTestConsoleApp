name: BuildTestConsole App Build

on:
  # trigger manual
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'BuildTestConsoleApp/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          source-url: https://nuget.pkg.github.com/jeffu231/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      - name: Display dotnet version
        run: dotnet --version
        
      - name: Install Dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build

      - name: Setup git
        run: |
          git config --local user.email "git@k9kld.org"
          git config --local user.name "git"

      - name: Install Versionize
        run: dotnet tool install --global Versionize
        
      - name: Versioning
        id: versionize
        run: versionize --aggregate-pre-releases --skip-dirty
        continue-on-error: true

      - name: Test if release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping Release. No release required."
        
      - name: Push changes to GitHub
        if: steps.versionize.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
          
      - name: "Create release"
        if: steps.versionize.outcome == 'success'
        uses: "actions/github-script@v7"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              const tags_url = context.payload.repository.tags_url + "?per_page=1"
              const result = await github.request(tags_url)
              const current_tag = result.data[0].name
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: current_tag,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: current_tag,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
          
#      - name: Login to GitHub Container Registry
#        if: steps.versionize.outcome == 'success'
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Publish and push the container Image
#        run: |
#          dotnet publish -c Release /p:PublishProfile=github
